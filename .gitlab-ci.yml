# Deploy Model (Template)

workflow:
  rules:
    # Run the pipeline whenever a prod stage is assigned to the model
    - if: $CI_COMMIT_TAG

parse:
  # This job parses the modol tag to identify model registry actions

  image: python:3.11-slim

  script: 
  - echo "JOB = any-tag"
  - echo "CI_COMMIT_TAG - ${CI_COMMIT_TAG}" # pool-segmentation#prod#2
  
  # Install GTO to parse model tags
  - pip install gto
  
  # This job parses the modol tag to identify model registry actions
  - export MODEL_NAME="$(gto check-ref pool-segmentation#prod#2 --name)"
  - export MODEL_VERSION="$(gto check-ref pool-segmentation#prod#2 --version)"
  - export MODEL_EVENT="$(gto check-ref pool-segmentation#prod#2 --event)"
  - export MODEL_STAGE="$(gto check-ref pool-segmentation#prod#2 --stage)"

  - echo "MODEL_NAME - ${MODEL_NAME}" 
  - echo "MODEL_VERSION - ${MODEL_VERSION}" 
  - echo "MODEL_EVENT - ${MODEL_EVENT}" 
  - echo "MODEL_STAGE - ${MODEL_STAGE}" 


deploy-model:
  needs:
  - parse

  rules:
  - if: $MODEL_VERSION == 'assignment' && $MODEL_STAGE == 'prod'
  
  script: 
  - echo "DEPLOY - to PROD environment"
  - echo "REPO - ${CI_REPOSITORY_URL}" 
  - echo "MODEL_NAME  ${MODEL_NAME}"
  - echo "MODEL_VERSION  ${MODEL_VERSION}"
  
  - echo "dvc config --global studio.token ${DVC_STUDIO_TOKEN }"
  - echo "dvc artifacts get  ${CI_REPOSITORY_URL} ${MODEL_NAME} --rev ${MODEL_VERSION}"
  - echo "The right model is available and you can use the rest of this command to deploy it. Good job!"